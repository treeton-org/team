version: "3.9"
services:
  #############
  ## Traefik ##
  #############
  traefik:
    image: traefik:v2.9.8
    container_name: traefik
    restart: always
    networks:
      - traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./docker/traefik/provider.yaml:/etc/traefik/provider.yaml:ro
      - ./.htpasswd:/etc/.htpasswd
      - traefik-acme:/etc/traefik/acme
      - traefik-log:/var/log/traefik
    command:
      - "--certificatesResolvers.letsEncrypt.acme.email=${TRAEFIL_ACME_EMAIL}"
    labels:
      - traefik.enable=true

      - traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=auth@file
      - traefik.http.routers.traefik.entryPoints=http

      - traefik.http.routers.traefikHttps.rule=Host(`${TRAEFIK_DOMAIN}`)
      - traefik.http.routers.traefikHttps.service=api@internal
      - traefik.http.routers.traefikHttps.middlewares=auth@file
      - traefik.http.routers.traefikHttps.entryPoints=https
      - traefik.http.routers.traefikHttps.tls.certResolver=letsEncrypt

      - traefik.http.routers.traefikMetrics.rule=Host(`${TRAEFIK_METRICS_DOMAIN}`)
      - traefik.http.routers.traefikMetrics.service=prometheus@internal
      - traefik.http.routers.traefikMetrics.entryPoints=http

      - traefik.http.routers.traefikMetricsHttps.rule=Host(`${TRAEFIK_METRICS_DOMAIN}`)
      - traefik.http.routers.traefikMetricsHttps.service=prometheus@internal
      - traefik.http.routers.traefikMetricsHttps.entryPoints=https
      - traefik.http.routers.traefikMetricsHttps.tls.certResolver=letsEncrypt

      - traefik.http.services.traefik.loadbalancer.server.port=8082


  ################
  ## Focalboard ##
  ################
  focalboard:
    image: mattermost/focalboard:7.8.0
    container_name: focalboard
    restart: always
    networks:
      - traefik
      - focalboard
    volumes:
      - ./docker/focalboard/config.json:/opt/focalboard/config.json:ro
      - focalboard:/opt/focalboard/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.focalboard.rule=Host(`${FOCALBOARD_DOMAIN}`)
      - traefik.http.routers.focalboard.service=focalboard
      - traefik.http.routers.focalboard.entryPoints=http

      - traefik.http.routers.focalboardHttps.rule=Host(`${FOCALBOARD_DOMAIN}`)
      - traefik.http.routers.focalboardHttps.service=focalboard
      - traefik.http.routers.focalboardHttps.entryPoints=https
      - traefik.http.routers.focalboardHttps.tls.certResolver=letsEncrypt

      - traefik.http.services.focalboard.loadbalancer.server.port=8000

      - traefik.http.routers.focalboardMetrics.rule=Host(`${FOCALBOARD_METRICS_DOMAIN}`)
      - traefik.http.routers.focalboardMetrics.service=focalboardMetrics
      - traefik.http.routers.focalboardMetrics.entryPoints=http

      - traefik.http.routers.focalboardMetricsHttps.rule=Host(`${FOCALBOARD_METRICS_DOMAIN}`)
      - traefik.http.routers.focalboardMetricsHttps.service=focalboardMetrics
      - traefik.http.routers.focalboardMetricsHttps.entryPoints=https
      - traefik.http.routers.focalboardMetricsHttps.tls.certResolver=letsEncrypt

      - traefik.http.services.focalboardMetrics.loadbalancer.server.port=9092

  focalboard-postgres:
    image: postgres:15.2
    container_name: focalboard-postgres
    restart: always
    networks:
      - focalboard
      - focalboard-postgres
    volumes:
      - focalboard-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=focalboard
      - POSTGRES_PASSWORD=focalboard
      - POSTGRES_DB=boards

  focalboard-postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.11.1
    container_name: focalboard-postgres-exporter
    restart: always
    networks:
      - traefik
      - focalboard-postgres
      - focalboard-postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://focalboard:focalboard@focalboard-postgres:5432/boards?sslmode=disable
    labels:
      - traefik.enable=true

      - traefik.http.routers.focalboardPostgresExporter.rule=Host(`${FOCALBOARD_POSTGRES_EXPORTER_DOMAIN}`)
      - traefik.http.routers.focalboardPostgresExporter.service=focalboardPostgresExporter
      - traefik.http.routers.focalboardPostgresExporter.entryPoints=http

      - traefik.http.routers.focalboardPostgresExporterHttps.rule=Host(`${FOCALBOARD_POSTGRES_EXPORTER_DOMAIN}`)
      - traefik.http.routers.focalboardPostgresExporterHttps.service=focalboardPostgresExporter
      - traefik.http.routers.focalboardPostgresExporterHttps.entryPoints=https
      - traefik.http.routers.focalboardPostgresExporterHttps.tls.certResolver=letsEncrypt

      - traefik.http.services.focalboardPostgresExporter.loadbalancer.server.port=9187


  #############
  ## Grafana ##
  #############
  tempo:
    image: grafana/tempo:1.5.0
    container_name: tempo
    restart: always
    command:
      - "-config.file=/etc/tempo.yaml"
    networks:
      - traefik
      - tempo
    volumes:
      - ./docker/tempo/tempo.yaml:/etc/tempo.yaml:ro
      - tempo:/tmp/tempo
    labels:
      - traefik.enable=true
      - traefik.http.routers.tempo.rule=Host(`${TEMPO_DOMAIN}`)
      - traefik.http.routers.tempo.service=tempo
      - traefik.http.routers.tempo.entryPoints=http

      - traefik.http.routers.tempoHttps.rule=Host(`${TEMPO_DOMAIN}`)
      - traefik.http.routers.tempoHttps.service=tempo
      - traefik.http.routers.tempoHttps.entryPoints=https
      - traefik.http.routers.tempoHttps.tls.certResolver=letsEncrypt

      - traefik.http.services.tempo.loadbalancer.server.port=3200


networks:
  traefik:
    external: true
    name: traefik
  focalboard:
  focalboard-postgres:
  focalboard-postgres-exporter:
  tempo:

volumes:
  traefik-acme:
  traefik-log:
  focalboard:
  focalboard-postgres:
  tempo: