# Official documentation
# @see https://doc.traefik.io/traefik

# Static Configuration
# @see https://doc.traefik.io/traefik/reference/static-configuration/file
global:
  checkNewVersion: false
  sendAnonymousUsage: false

# Enabling the docker provider
# @see https://doc.traefik.io/traefik/providers/docker
providers:
  docker:
    # Expose containers by default through Traefik.
    # If set to false, containers that don't have a traefik.enable=true label
    # will be ignored from the resulting routing configuration.
    # @see https://doc.traefik.io/traefik/providers/docker/#exposedbydefault
    exposedByDefault: false

    # Defines a default docker network to use for connections to all containers.
    # This option can be overridden on a container basis with the traefik.docker.network label.
    # @see https://doc.traefik.io/traefik/providers/docker/#network
    network: traefik

  # Good Old Configuration File
  # @see https://doc.traefik.io/traefik/providers/file
  file:
    # Defines the path to the configuration file.
    # @see https://doc.traefik.io/traefik/providers/file/#filename
    filename: /etc/traefik/provider.yaml

# HTTPS redirection (80 to 443)
# @see https://doc.traefik.io/traefik/routing/entrypoints
entryPoints:
  http:
    address: :80
  https:
    address: :443
  metrics:
    address: :8082

# Enable ACME (Let's Encrypt): automatic SSL
# @see https://doc.traefik.io/traefik/https/acme
certificatesResolvers:
  letsEncrypt:
    acme:
      # File or key used for certificates storage.
      storage: /etc/traefik/acme/acme.json

      # Use a TLS-ALPN-01 ACME challenge.
      tlsChallenge: {}

# Writing logs to a file
# @see https://doc.traefik.io/traefik/observability/logs
log:
  # By default, the logs are written to the standard output.
  # You can configure a file path instead using the filePath option.
  filePath: /var/log/traefik/traefik.log

  # By default, the logs use a text format (common),
  # but you can also ask for the json format in the format option
  format: json

  # By default, the level is set to ERROR
  # Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO
  level: ERROR

# Enable the access logs.
# By default, logs are written to stdout, in text format
# @see https://doc.traefik.io/traefik/observability/access-logs
accessLog:
  # By default, access logs are written to the standard output.
  # To write the logs into a log file, use the filePath option
  filePath: /var/log/traefik/access.log

  # By default, the logs use a text format (common),
  # but you can also ask for the json format in the format option
  format: json

# If you enable the API, a new special service
# named api@internal is created and can then be referenced in a router
# @see https://doc.traefik.io/traefik/operations/api
api:
  # Enable the API in insecure mode, which means that
  # the API will be available directly on the entryPoint named traefik
  insecure: false

  # Enable the dashboard
  dashboard: true

# Enable the Prometheus
# @see https://doc.traefik.io/traefik/observability/metrics/prometheus
metrics:
  prometheus:

    # Buckets for latency metrics
    # @see https://doc.traefik.io/traefik/observability/metrics/prometheus/#buckets
    buckets:
      - 1
      - 3
      - 12
      - 50

    # Enable metrics on entry points
    # @see https://doc.traefik.io/traefik/observability/metrics/prometheus/#addentrypointslabels
    addEntryPointsLabels: true

    # Enable metrics on routers
    # @see https://doc.traefik.io/traefik/observability/metrics/prometheus/#addrouterslabels
    addRoutersLabels : true

    # Enable metrics on services
    # @see https://doc.traefik.io/traefik/observability/metrics/prometheus/#addserviceslabels
    addServicesLabels: true

    # Entry point used to expose metrics
    # @see https://doc.traefik.io/traefik/observability/metrics/prometheus/#entrypoint
    entryPoint: metrics

# Visualize the Requests Flow
# @see https://doc.traefik.io/traefik/observability/tracing/overview
tracing:

  # To enable the Zipkin tracer
  # @see https://doc.traefik.io/traefik/observability/tracing/zipkin
  zipkin:

    # HTTP endpoint used to send data
    # @see https://doc.traefik.io/traefik/observability/tracing/zipkin/#httpendpoint
    httpEndpoint: http://tempo:9411/api/v2/spans